version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: displaydeck-postgres
    restart: always
    environment:
      POSTGRES_DB: displaydeck
      POSTGRES_USER: displaydeck_user
      POSTGRES_PASSWORD: verysecretpassword
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=trust"
    ports:
      # Map container 5432 to host 5433 to avoid conflicts with local Postgres
      - "5433:5432"
    volumes:
      # This persists the database data on your local machine
      - postgres_data:/var/lib/postgresql/data
      # This runs the initialization scripts on first startup
      - ./init-user.sql:/docker-entrypoint-initdb.d/01-init-user.sql
      - ./schema.sql:/docker-entrypoint-initdb.d/02-schema.sql

  # MinIO S3-Compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: displaydeck-minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      # Port for the S3-compatible API
      - "9000:9000"
      # Port for the web-based admin console
      - "9001:9001"
    volumes:
      # This persists the uploaded files on your local machine
      - minio_data:/data

  # Swagger UI for API documentation
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: displaydeck-swagger
    restart: unless-stopped
    environment:
      # Point Swagger UI to our friendly OpenAPI spec
      SWAGGER_JSON: /docs/openapi.friendly.json
    volumes:
      - ./docs:/docs:ro
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio

  # DisplayDeck API server (Linux container)
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: displaydeck-server
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: displaydeck
      DB_USER: displaydeck_user
      DB_PASSWORD: verysecretpassword
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_REGION: us-east-1
    ports:
      - "2001:2001"
    depends_on:
      - postgres
      - minio

  # Delphi PAServer (Linux) to enable Linux 64-bit SDK and remote compilation
  paserver:
    build:
      context: ./paserver
    container_name: displaydeck-paserver
    restart: unless-stopped
    environment:
      PASERVER_PASSWORD: displaydeck
      PASERVER_PORT: 64211
    volumes:
      # Place PAServer-Linux-64.tar.gz here from your RAD Studio install
      - ./paserver:/paserver
    ports:
      - "64211:64211"

volumes:
  postgres_data:
  minio_data:
